*A new taxonomy created under current theme..
In our case, twentyeleven is the theme we are working with..

Taxonomy created: edition
HOW???

Add these lines in your functions.php file(wp-content/themes/twentyeleven/functions.php)

/** Add custom taxonomy Edition*/

add_action('init','create_edition_taxonomy',0);

function create_edition_taxonomy(){
	
	$edition_labels = array(
		     'name' => _x( 'Editions', 'taxonomy general name' ),
		    'singular_name' => _x('Edition', 'taxonomy singular name'),
    		'menu_name' => 'Edition',
		    'all_items' => __( 'All Editions' ),
		    'edit_item' => __( 'Edit Edition' ),
			'view_item' => __( 'View Edition' ),
			'update_item' => __( 'Update Edition' ),
			'add_new_item' => __( 'Add New Edition' ),
			'new_item_name' => __( 'New Edition Name' ),
			'parent_item' => __( 'Parent Edition' ),
			'parent_item_colon' => __( 'Parent Edition:' ),
			'search_items' => __( 'Search Editions' ),
			'popular_items' => null,
			'separate_items_with_commas' => null,
			'add_or_remove_items' => __( 'Add or remove edition' ),
			'choose_from_most_used' => __( 'Choose from the most used editions' )	
	);

/*Registering edition taxonomy*/

	register_taxonomy( 'edition', 'post', array( 
		'hierarchical' => false, 
		'labels' => $edition_labels, 
		'query_var' => true, 
		'rewrite' => array('slug' => 'edition') ) );
}

*

*Added a plugin  taxonomy picker.*

*A login button and register button can be added on the wordpress page by calling simple wordpress functions.. What we have done is called those functions while loading the header i.e in the file header.php

lines to be added are:

<!--//////////////////Section for login button/////////////////////////////////////////-->


<div id="login" align="right">
<?php wp_loginout();?>
<?php wp_register();?>
</div>


<!--///////////////////////////////////////////////////////////-->

we can change these links to small buttons also

*

*
/*********************Adding custom post type for bulletin board*********************************/
	function my_custom_post_bulletin() {
	$labels = array(
		'name'               => _x( 'bulletins', 'post type general name' ),
		'singular_name'      => _x( 'bulletin', 'post type singular name' ),
		'add_new'            => _x( 'Add New', 'bulletin' ),
		'add_new_item'       => __( 'Add New Bulletin' ),
		'edit_item'          => __( 'Edit Bulletin' ),
		'new_item'           => __( 'New Bulletin' ),
		'all_items'          => __( 'All Bulletins' ),
		'view_item'          => __( 'View Bulletin' ),
		'search_items'       => __( 'Search Bulletins' ),
		'not_found'          => __( 'No bulletins found' ),
		'not_found_in_trash' => __( 'No bulletins found in the Trash' ), 
		'parent_item_colon'  => '',
		'menu_name'          => 'Bulletins'
	);
	$args = array(
		'labels'        => $labels,
		'description'   => 'Holds our bulletins',
		'public'        => true,
		'menu_position' => 5,
		'supports'      => array( 'title', 'editor', 'thumbnail', 'excerpt', 'comments', 'author' ),
		'has_archive'   => true,
	);
	register_post_type( 'bulletins', $args );	
}
add_action( 'init', 'my_custom_post_bulletin' );

/*****************Custom post type creation code ends here*****************/

*To display bulletin posts in sidebar as widget "custom post display" plugin has been used*

/***************************Registration using webmail id only*************/

add_action('registration_errors', 'sizeable_restrict_domains', 10, 3);
function sizeable_restrict_domains( $errors, $login, $email ) {
	$whitelist = array('daiict.ac.in');
	if ( is_email($email) ) {
		$parts = explode('@', $email);
		$domain = $parts[count($parts)-1];
		if ( !in_array(strtolower($domain), $whitelist) ) {
			$errors->add('email_domain', __('ERROR: You may only register with your daiict email address.'));
		}
	}
	return $errors;
}